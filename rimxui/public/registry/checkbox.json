{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "checkbox",
  "type": "registry:component",
  "author": "The RimxUi Team",
  "dependencies": [
    "class-variance-authority"
  ],
  "files": [
    {
      "path": "src/components/Checkbox/Checkbox.tsx",
      "content": "import React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { mc } from \"@utils\";\n\nconst checkboxVariants = cva(\n  \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"\",\n        outline: \"border-2\",\n        filled: \"border-0 bg-muted\",\n      },\n      colorScheme: {\n        // Changed from 'color' to 'colorScheme'\n        primary: \"text-primary border-primary focus-visible:ring-primary\",\n        secondary:\n          \"text-secondary border-secondary focus-visible:ring-secondary\",\n        destructive:\n          \"text-destructive border-destructive focus-visible:ring-destructive\",\n        success: \"text-success border-success focus-visible:ring-success\",\n      },\n      size: {\n        sm: \"h-3 w-3\",\n        default: \"h-4 w-4\",\n        lg: \"h-5 w-5\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      colorScheme: \"primary\", // Updated from 'color'\n      size: \"default\",\n    },\n  },\n);\n\nexport interface CheckboxProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, \"size\" | \"color\">, // Added 'color' to Omit\n    VariantProps<typeof checkboxVariants> {\n  label?: string;\n  labelPosition?: \"left\" | \"right\";\n  indeterminate?: boolean;\n}\n\nconst Checkbox = React.forwardRef<HTMLInputElement, CheckboxProps>(\n  (\n    {\n      className,\n      variant,\n      colorScheme,\n      size,\n      label,\n      labelPosition = \"right\",\n      indeterminate,\n      ...props\n    },\n    ref,\n  ) => {\n    return (\n      <label className=\"flex items-center gap-2 cursor-pointer\">\n        {label && labelPosition === \"left\" && (\n          <span className=\"text-sm font-medium text-foreground\">{label}</span>\n        )}\n        <input\n          type=\"checkbox\"\n          ref={ref}\n          className={mc(\n            checkboxVariants({ variant, colorScheme, size, className }), // Updated to colorScheme\n            indeterminate && \"bg-primary/20 border-primary/50\",\n          )}\n          {...props}\n        />\n        {label && labelPosition === \"right\" && (\n          <span className=\"text-sm font-medium text-foreground\">{label}</span>\n        )}\n      </label>\n    );\n  },\n);\nCheckbox.displayName = \"Checkbox\";\n\nexport { Checkbox };\n",
      "type": "registry:component",
      "target": "src/components/ui/Checkbox.tsx"
    }
  ]
}