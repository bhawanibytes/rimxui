{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "label",
  "type": "registry:component",
  "author": "The RimxUi Team",
  "dependencies": [
    "class-variance-authority"
  ],
  "files": [
    {
      "path": "src/components/Label/Label.tsx",
      "content": "\nimport React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { mc } from \"@utils\";\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n  {\n    variants: {\n      variant: {\n        default: \"\",\n        destructive: \"text-destructive\",\n        success: \"text-success\",\n        warning: \"text-warning\",\n        info: \"text-info\",\n      },\n      size: {\n        default: \"\",\n        sm: \"text-xs\",\n        lg: \"text-base\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\nexport interface LabelProps\n  extends React.LabelHTMLAttributes<HTMLLabelElement>,\n    VariantProps<typeof labelVariants> {\n  required?: boolean;\n}\n\nconst Label = React.forwardRef<HTMLLabelElement, LabelProps>(\n  ({ className, variant, size, required, children, ...props }, ref) => {\n    return (\n      <label\n        ref={ref}\n        className={mc(labelVariants({ variant, size, className }))}\n        {...props}\n      >\n        {children}\n        {required && <span className=\"text-destructive ml-1\">*</span>}\n      </label>\n    );\n  },\n);\nLabel.displayName = \"Label\";\n\nexport { Label };\n",
      "type": "registry:component",
      "target": "src/components/ui/Label.tsx"
    }
  ]
}